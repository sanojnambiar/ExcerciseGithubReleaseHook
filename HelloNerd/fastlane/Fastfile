# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Builds HelloNerd framework"
  lane :build_framework do
    # add actions here: https://docs.fastlane.tools/actions
    xcodebuild(
      scheme: "HelloNerd",
      xcargs: "-project HelloNerd.xcodeproj"
    )
  end






  # update the asset to the release
  lane :release_to_github do


    version = lane_context[SharedValues::VERSION_NUMBER]

# get the last commit comments from Git history
    # and creates our changelog
    comments = changelog_from_git_commits(
        between: [last_git_tag, "HEAD"],
        pretty: "- %s",
        date_format: "short",
        match_lightweight_tag: false, 
        merge_commit_filtering: "exclude_merges" 
    ) 

   # publish a new release into Github

	GITHUB_TOKEN = "096219953ba60d5350bf367e8b4d41fd10f2d96a"

    github_release = set_github_release(
        api_token: GITHUB_TOKEN,
        repository_name: "knambiar/TestFastLaneReleaseAsset",
        name: "#version v#{version}",
        tag_name: "v#{version}",
        description: comments,
        commitish: "master",
        upload_assets: ["HelloNerd.framework.zip"]
    )



 end


  # Increments the patch version, commits the plist change and tags the commit
  lane :bump_version_and_tag do
    get_version_number
    version_number = lane_context[SharedValues::VERSION_NUMBER]

    add_git_tag(
      tag: "v#{version_number}",
      force: true
    )
    push_git_tags(
      force: true
    )

    increment_version_number
    version_number = lane_context[SharedValues::VERSION_NUMBER]
    commit_version_bump(
      xcodeproj: "HelloNerd.xcodeproj",
      message: "Update development version to " + version_number,
      force: true
    )
    push_to_git_remote(
      remote_branch: "master"
    )
  end
end
